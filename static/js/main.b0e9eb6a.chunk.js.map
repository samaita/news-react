{"version":3,"sources":["components/ActionButton/index.js","components/Loader/index.js","components/ArticleView/index.js","components/ArticleMainView/index.js","components/ArticleBookmarkedView/index.js","components/CategoryMenu/index.js","components/Header/index.js","components/SideMenu/index.js","components/Toast/index.js","components/TrendingView/index.js","App.js","reportWebVitals.js","index.js"],"names":["ActionButton","props","fillValue","selected","strokeValue","useShare","type","useBookmark","defaultButton","className","onClick","handleArticleBookmark","articleData","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","data","text","title","url","Loader","isLoading","ArticleView","useMock","articleList","articleBookmarked","selectedMenu","selectedCategory","maxCharDescription","handleGetArticle","handleTimeFormat","LayoutArticle","hasMore","map","el","index","hasDefaultImage","urlToImage","push","id","style","backgroundImage","href","source","name","Date","parse","publishedAt","author","description","length","substring","dataLength","next","loader","refreshFunction","pullDownToRefresh","pullDownToRefreshThreshold","pullDownToRefreshContent","textAlign","releaseToRefreshContent","ArticleMainView","ArticleBookmarkedView","CategoryMenu","categories","handleSelectCategory","category","isFirst","isSelected","slug","Header","cache","handleSetCache","toggleBookmark","isDisplayMenu","SideMenu","checked","readOnly","Toast","toast","message","handleRemoveToast","TrendingView","includes","window","location","Home","useState","newsAPIAuthKey","process","REACT_APP_NEWS_API_KEY","newsURLEverything","defaultErrorMessage","timeout","maxToast","pageSize","sortByDate","sortByPopularity","language","intervalDay","config","idToast","isInitArticleLoaded","setCache","number","hasNext","page","setPage","setIsLoading","keyword","setSelectedCategory","articleBookmarkedCategory","topCategory","setArticleList","useLocalStorage","articleBookmarkedList","setArticleBookmarkedList","setArticleBookmarked","topArticleLoaded","setTopArticleLoaded","topArticleList","setTopArticleList","all","DataMockEnergy","articles","space","DataMockSpace","energy","health","DataMockHealth","iot","DataMockIoT","ai","DataMockAI","cybersecurity","DataMockCybersecurity","popular","mockArticle","setToast","handleGetTopArticle","pageNumber","Number","axios","get","headers","params","qInTitle","sortBy","then","res","totalResults","handleSetPage","catch","err","response","status","handlePushToast","newPage","paramFrom","handleGetPastDate","from","e","v","newCache","newToastID","newToast","currentToast","shift","bookmarkData","newArticleList","newArticleBookmarked","newArticleBookmarkedList","bookmarked","updateNewArticleBookmarkedList","unix","t","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","day","ot","now","key","initialValue","item","localStorage","getItem","JSON","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useEffect","idToRemove","mark","i","splice","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sm0GAsDeA,EAnDM,SAACC,GAClB,IAAIC,EAAYD,EAAME,SAAW,UAAY,OACzCC,EAAcH,EAAME,SAAW,UAAY,eAC3CE,EAA0B,UAAfJ,EAAMK,KACjBC,EAA6B,aAAfN,EAAMK,KAEpBE,EAAgB,wBAAQC,UAAU,YAAYC,QAAS,kBAAMH,GAAeN,EAAMU,sBAAsBV,EAAMW,cAA9F,SAChB,sBAAMH,UAAU,kDAAhB,SACI,qBAAKI,MAAM,6BAA6BC,KAAMZ,EAAWa,QAASd,EAAMc,QAASC,OAAQZ,EAAzF,SACI,sBAAMa,cAAc,QAAQC,eAAe,QAAQC,YAAY,MAAMC,EAAGnB,EAAMoB,aAK1F,OACI,sBAAKZ,UAAU,kBAAf,UACKJ,GAAY,cAAC,IAAD,CACTgB,KAAM,CACFC,KAAMrB,EAAMW,YAAYW,MACxBC,IAAKvB,EAAMW,YAAYY,IACvBD,MAAOtB,EAAMW,YAAYW,OAJpB,SAMRf,KAGHH,GAAYG,MCfXiB,EAbA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACd,OACI,8BACKA,GAAa,qBAAKjB,UAAU,iEAAf,SACV,qBAAKA,UAAU,SAAf,SACI,qBAAKA,UAAU,yFCkGpBkB,EAhGK,SAAC,GAAyK,IAAvKC,EAAsK,EAAtKA,QAASC,EAA6J,EAA7JA,YAA2BC,GAAkI,EAAhJC,aAAgJ,EAAlID,mBAAmBE,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,mBAAoBC,EAAyE,EAAzEA,iBAAkBC,EAAuD,EAAvDA,iBAAkBxB,EAAqC,EAArCA,sBAChJyB,GADqL,EAAdC,QACvJ,IAsCpB,OApCAR,EAAYS,KAAI,SAAUC,EAAIC,GAC1B,IAAIC,IAAkBF,EAAGG,WAgCzB,OA7BAN,EAAcO,KACV,qBAAiBlC,UAAU,2EAA3B,SACI,sBAAKmC,GAAG,SAASnC,UAAU,gBAA3B,UACI,sBAAKA,UAAU,kFAAkFoC,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAkBF,EAAGG,WALhJ,kKAKkH,MAAzH,UACI,cAAC,EAAD,CACIpC,KAAK,QACLM,YAAa2B,EACbxB,QAAQ,cACRM,KAAK,0OAET,cAAC,EAAD,CACIf,KAAK,WACLM,YAAa2B,EACbxB,QAAQ,cACRM,KAAK,oDACLlB,SAAU2B,EAAkBS,EAAGf,KAC/Bb,sBAAuBA,OAG/B,sBAAKiC,GAAG,OAAOnC,UAAU,kCAAzB,UACI,oBAAImC,GAAG,OAAOnC,UAAU,8CAAxB,SAAsE,mBAAGsC,KAAMR,EAAGf,IAAZ,SAAkBe,EAAGS,OAAOC,SAClG,oBAAIL,GAAG,QAAQnC,UAAU,wCAAzB,SAAkE8B,EAAGhB,QACrE,qBAAIqB,GAAG,YAAYnC,UAAU,sDAA7B,UAAoF0B,EAAiBe,KAAKC,MAAMZ,EAAGa,cAAeb,EAAGc,OAAS,MAAQd,EAAGc,OAAS,MAClK,mBAAG5C,UAAU,4CAAb,SAA0D8B,EAAGe,aAAef,EAAGe,YAAYC,OAAStB,EAAqBM,EAAGe,YAAYE,UAAU,EAAGvB,GAAsB,MAAQM,EAAGe,cACtL,mBAAG7C,UAAU,iFAAiFsC,KAAMR,EAAGf,IAAvG,kCAvBFgB,IA4BPJ,KAIP,8BACI,sBAAM3B,UAAU,6BAAhB,UACI,oBAAIA,UAAU,wDAAd,SACKuB,EAAiBT,MAAQS,EAAiBT,MAAQS,EAAiBiB,QAGtErB,GAAWC,EAAY0B,OAAS,GAAK,cAAE,IAAF,CACnCE,WAAY5B,EAAY0B,OACxBG,KAAMxB,EACNG,SAAS,EACTsB,OAAQlC,EACRmC,gBAAiB1B,EACjB2B,mBAAiB,EACjBC,2BAA4B,GAC5BC,yBACI,oBAAIlB,MAAO,CAAEmB,UAAW,UAAxB,yCAEJC,wBACI,oBAAIpB,MAAO,CAAEmB,UAAW,UAAxB,uCAZ+B,SAclC5B,IAEJR,GAAWQ,QClBb8B,EA/CS,SAAC,GAAyK,IAAvKtC,EAAsK,EAAtKA,QAASG,EAA6J,EAA7JA,aAAcF,EAA+I,EAA/IA,YAAaC,EAAkI,EAAlIA,kBAAmBE,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,mBAAoBC,EAAyE,EAAzEA,iBAAkBC,EAAuD,EAAvDA,iBAAkBxB,EAAqC,EAArCA,sBAAuB0B,EAAc,EAAdA,QAC/K,OACI,8BACsB,SAAjBN,GAA2B,qBAAKtB,UAAU,GAAf,SACxB,cAAC,EAAD,CACImB,QAASA,EACTC,YAAaA,EACbC,kBAAmBA,EACnBE,iBAAkBA,EAClBC,mBAAoBA,EACpBC,iBAAkBA,EAClBC,iBAAkBA,EAClBxB,sBAAuBA,EACvB0B,QAASA,SCkCd8B,EA/Ce,SAAC,GAAyK,IAAvKvC,EAAsK,EAAtKA,QAASG,EAA6J,EAA7JA,aAAcF,EAA+I,EAA/IA,YAAaC,EAAkI,EAAlIA,kBAAmBE,EAA+G,EAA/GA,iBAAkBC,EAA6F,EAA7FA,mBAAoBC,EAAyE,EAAzEA,iBAAkBC,EAAuD,EAAvDA,iBAAkBxB,EAAqC,EAArCA,sBAAuB0B,EAAc,EAAdA,QACrL,OACI,8BACsB,aAAjBN,GAA+B,qBAAKtB,UAAU,sBAAf,SAC5B,cAAC,EAAD,CACImB,QAASA,EACTC,YAAaA,EACbC,kBAAmBA,EACnBE,iBAAkBA,EAClBC,mBAAoBA,EACpBC,iBAAkBA,EAClBC,iBAAkBA,EAClBxB,sBAAuBA,EACvB0B,QAASA,SCyBd+B,EAxCM,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,WAAYrC,EAA2D,EAA3DA,iBAAkBsC,EAAyC,EAAzCA,qBAAsBvC,EAAmB,EAAnBA,aACxE,OACI,8BACsB,SAAjBA,GAA2B,qBAAKtB,UAAU,uBAAf,SACxB,oBAAIA,UAAU,kDAAd,SACK4D,EAAW/B,KAAI,SAAUiC,EAAU/B,GAChC,IAAIgC,EAAoB,IAAVhC,EACViC,EAAaF,EAASG,OAAS1C,EAAiB0C,MAASF,GAAqC,SAA1BxC,EAAiB0C,KACzF,OACI,oBAAwBjE,UAAS,UAAK+D,EAAU,OAAS,IAAzD,SACI,mBAAG/D,UAAS,8FAAyFgE,EAAa,yBAA2B,iBAAmB1B,KAAM,IAAMwB,EAASG,KAAMhE,QAAS,kBAAM4D,EAAqBC,IAA/N,SACKA,EAAStB,QAFTsB,EAASG,Q,kBCiC/BC,EAxCA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,eAAgBnD,EAAgB,EAAhBA,UACjCxB,EAAmC,aAAvB0E,EAAM7C,aAA8B,UAAY,OAC5D3B,EAAqC,aAAvBwE,EAAM7C,aAA8B,UAAY,eAC9D+C,EAAwC,aAAvBF,EAAM7C,aAA8B,OAAS,WAElE,OACI,gCACI,sBAAKtB,UAAU,gEAAf,UACI,qBAAKA,UAAU,qCAAqCC,QAAS,kBAAMmE,EAAe,iBAAkBD,EAAMG,gBAA1G,SACI,qBAAKlE,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,gBAAgBC,OAAO,eAAnF,SACI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,GAAKC,EAAE,gCAG/E,sBAAKX,UAAU,uCAAuCC,QAAS,kBAAMmE,EAAe,eAAgB,SAApG,UACI,oBAAIpE,UAAU,yBAAd,wBACA,mBAAGA,UAAU,qBAAb,4CAEJ,qBAAKA,UAAU,sCAAsCC,QAAS,kBAAMmE,EAAe,eAAgBC,IAAnG,SACI,qBAAKjE,MAAM,6BAA6BC,KAAMZ,EAAWa,QAAQ,gBAAgBC,OAAQZ,EAAzF,SACI,sBAAMa,cAAc,QAAQC,eAAe,QAAQC,YAAa,GAAKC,EAAE,iGAInF,cAAC,EAAD,CACIM,UAAWA,QCIZsD,EA9BE,SAAC,GAA+B,IAA7BJ,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eACvB,OACI,gCACKD,EAAMG,eAAiB,qBAAKtE,UAAU,oDAAf,SACpB,+BACI,qBAAIA,UAAS,6CAAgDC,QAAS,kBAAMmE,EAAe,WAAYD,EAAMhD,UAA7G,6BACd,qBAAKnB,UAAU,wBAAf,SACsB,sBAAKA,UAAU,sFAAf,UACI,uBAAOwE,QAASL,EAAMhD,QAAStB,KAAK,WAAW2C,KAAK,SAASxC,UAAU,uGAAuGyE,UAAU,IACxL,uBAAOzE,UAAU,uGAI7B,oBAAIA,UAAS,6CAAgDC,QAAS,kBAAMmE,EAAe,iBAAkBD,EAAMG,gBAAnH,wBAGPH,EAAMG,eAAiB,qBAAKtE,UAAU,4DAA4DC,QAAS,kBAAMmE,EAAe,iBAAkBD,EAAMG,sBCYtJI,EA5BD,SAAClF,GACX,OACI,qBAAKQ,UAAU,wCAAf,SACKR,EAAMmF,MAAM9C,KAAI,SAAUjB,GACvB,OACI,qBAAmBZ,UAAU,uFAA7B,SACI,sBAAKA,UAAU,4DAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BY,EAAKgE,UAAc,qBAAK3E,QAAS,kBAAMT,EAAMqF,kBAAkBjE,EAAKuB,KAAKnC,UAAU,uCAAhE,oBAF3CY,EAAKuB,M,cC2DpB2C,EAhEM,SAAC,GAAqH,EAAnH3D,QAAoH,IAA3GC,EAA0G,EAA1GA,YAAaE,EAA6F,EAA7FA,aAAsEI,GAAuB,EAA/EH,iBAA+E,EAA7DC,mBAA6D,EAAzCC,iBAAyC,EAAvBC,kBAC5GC,EAAgB,GA2BpB,OAzBAP,EAAYS,KAAI,SAAUC,EAAIC,GACJD,EAAGG,YAAcH,EAAGG,WAAW8C,SAAS,WAG9D,OAFwB,IAAVhD,GAMdJ,EAAcO,KACV,qBAAiBlC,UAAU,+CAA3B,SACI,sBAAKmC,GAAG,SAASnC,UAAU,yBAAyBC,QAAS,kBAAM+E,OAAOC,SAAS3C,KAAOR,EAAGf,KAA7F,UACI,qBAAKf,UAAU,qDAAqDoC,MAAO,CAAEC,gBAAgB,OAAD,OAA2BP,EAAGG,WAA9B,QAC5F,qBAAKE,GAAG,OAAOnC,UAAU,uEAAuEoC,MAAO,CAAEC,gBAAgB,4DAAzH,SACI,sBAAKrC,UAAU,MAAf,UACI,oBAAImC,GAAG,OAAOnC,UAAU,yCAAxB,SAAiE,mBAAGA,UAAU,sGAAsGsC,KAAMR,EAAGf,IAA5H,SAAkIe,EAAGS,OAAOC,SAC7M,oBAAIL,GAAG,QAAQnC,UAAU,sDAAzB,SAAgF8B,EAAGhB,QACnF,qBAAIqB,GAAG,YAAYnC,UAAU,sDAA7B,UAAoF0B,EAAiBe,KAAKC,MAAMZ,EAAGa,cAAeb,EAAGc,OAAS,MAAQd,EAAGc,OAAS,eAPxKb,IAaPJ,GAjBIA,KAqBX,8BACsB,SAAjBL,GAA2B,qBAAKtB,UAAU,gFAAf,SACvB2B,O,wDCPjB,SAASuD,IAAQ,IAAD,EAEHC,mBAAS,CACnBC,eAAgBC,8IAAYC,uBAC5BC,kBAAmB,oCACnBC,oBAAqB,qDACrBC,QAAS,IACTC,SAAU,EACVC,SAAU,GACVC,WAAY,cACZC,iBAAkB,aAClBC,SAAU,KACVtE,mBAAoB,IACpBuE,YAAa,KAXbC,EAFa,sBAeMb,mBAAS,CAC5BhE,SAAS,EACT8E,QAAS,EACTC,qBAAqB,EACrB5E,aAAc,OACdgD,eAAe,IApBF,mBAebH,EAfa,KAeNgC,EAfM,OAsBIhB,mBAAS,CAC1BiB,OAAQ,EACRC,SAAS,IAxBI,mBAsBbC,EAtBa,KAsBPC,EAtBO,OA0BcpB,oBAAS,GA1BvB,mBA0BblE,EA1Ba,KA0BFuF,EA1BE,OA2B4BrB,mBAAS,CAClD3C,KAAM,MAAOyB,KAAM,MAAOnD,MAAO,SAAU2F,QAAS,oSA5BvC,mBA2BblF,EA3Ba,KA2BKmF,EA3BL,OA8BgBvB,mBAAS,CACtC3C,KAAM,MAAOyB,KAAM,MAAOnD,MAAO,aADjC6F,EA9Ba,sBAiCExB,mBAAS,CACxB3C,KAAM,UAAWyB,KAAM,UAAWnD,MAAO,UAAW2F,QAAS,kRAD7DG,EAjCa,sBAoCkBzB,mBAAS,IApC3B,mBAoCb/D,EApCa,KAoCAyF,EApCA,OAqCsCC,GAAgB,wBAAyB,IArC/E,mBAqCbC,EArCa,KAqCUC,EArCV,OAsC8BF,GAAgB,oBAAqB,IAtCnE,mBAsCbzF,EAtCa,KAsCM4F,EAtCN,OAuC4B9B,oBAAS,GAvCrC,oBAuCb+B,GAvCa,MAuCKC,GAvCL,SAwCwBhC,mBAAS,IAxCjC,qBAwCbiC,GAxCa,MAwCGC,GAxCH,SAyCClC,mBAAS,CACvB,CAAE3C,KAAM,MAAOyB,KAAM,MAAOnD,MAAO,SAAU2F,QAAS,mSACtD,CAAEjE,KAAM,QAASyB,KAAM,QAASwC,QAAS,mDACzC,CAAEjE,KAAM,SAAUyB,KAAM,SAAUwC,QAAS,+EAC3C,CAAEjE,KAAM,SAAUyB,KAAM,SAAUwC,QAAS,qBAC3C,CAAEjE,KAAM,MAAOyB,KAAM,MAAOwC,QAAS,iEACrC,CAAEjE,KAAM,0BAA2ByB,KAAM,KAAMwC,QAAS,2DACxD,CAAEjE,KAAM,gBAAiByB,KAAM,gBAAiBwC,QAAS,8BAPzD7C,GAzCa,wBAkDEuB,mBAAS,CACxBmC,IAAKC,EAAeC,SACpBC,MAAOC,EAAcF,SACrBG,OAAQJ,EAAeC,SACvBI,OAAQC,EAAeL,SACvBM,IAAKC,EAAYP,SACjBQ,GAAIC,EAAWT,SACfU,cAAeC,EAAsBX,SACrCY,QAASV,EAAcF,WARvBa,GAlDa,wBA4DMlD,mBAAS,IA5Df,qBA4DbR,GA5Da,MA4DN2D,GA5DM,MA+DdzE,GAAuB,SAAAC,GAClBvC,EAAiB0C,OAASH,EAASG,MAAQE,EAAM+B,sBAIrDQ,EAAoB5C,GAEhBK,EAAMhD,QACT0F,EAAewB,GAAYvE,EAASG,QAEpCuC,GAAa,GACb/E,GAAiBqC,EAAU,IAGvBK,EAAMhD,SAAY+F,KACtBqB,KACApB,IAAoB,IAGhBhD,EAAM+B,qBACV9B,GAAe,uBAAwBD,EAAM+B,uBAG/CzE,GAAmB,SAACqC,EAAU0E,GACzBrE,EAAMhD,UAGL2C,IACJA,EAAWvC,GAEPiH,IACJA,EAAalC,EAAKmC,QAGnBC,IAAMC,IAAI3C,EAAOT,kBAAmB,CACnCqD,QAAS,CACR,YAAa5C,EAAOZ,gBAErByD,OAAQ,CACPC,SAAUhF,EAAS2C,QACnBH,KAAMkC,EACN7C,SAAUK,EAAOL,SACjBoD,OAAQ/C,EAAOJ,WACfE,SAAUE,EAAOF,YAEhBkD,MAAK,SAAAC,GACPzC,GAAa,GAGZK,EADG2B,EAAa,EACD,GAAD,mBAAKpH,GAAL,YAAqB6H,EAAIrI,KAAK4G,WAE7ByB,EAAIrI,KAAK4G,UAGrByB,EAAIrI,KAAKsI,aAAelD,EAAOL,SAAW6C,EAC7CW,IAAc,EAAMX,EAAa,GAEjCW,IAAc,EAAOX,MAEpBY,OAAM,SAAAC,GACR7C,GAAa,GAET6C,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAChCC,GAAgB,QAASH,EAAIC,SAAS1E,SACf,UAAbyE,EAAI7G,MACdgH,GAAgB,QAAS,uBAAyBH,QAIrDF,GAAgB,SAAC9C,EAASmC,GACzB,IAAIiB,EAAO,eAAQnD,GACnBmD,EAAQpD,QAAUA,EAClBoD,EAAQhB,OAASD,EACjBjC,EAAQkD,IAETlB,GAAsB,WACrB,GAAIpE,EAAMhD,QACTkG,GAAkBgB,GAAW,aAD9B,CAKA,IAAIqB,EAAYC,GAAkB3D,EAAOD,aAEzC2C,IAAMC,IAAI3C,EAAOT,kBAAmB,CACnCqD,QAAS,CACR,YAAa5C,EAAOZ,gBAErByD,OAAQ,CACPC,SAAUlC,EAAYH,QACtBH,KAAM,EACNX,SAAU,EACVoD,OAAQ/C,EAAOH,iBACfC,SAAUE,EAAOF,SACjB8D,KAAMF,KAELV,MAAK,SAAAC,GACP5B,GAAkB4B,EAAIrI,KAAK4G,aACzB4B,OAAM,SAAAC,GACJA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,QAChCC,GAAgB,QAASH,EAAIC,SAAS1E,cAIzCR,GAAiB,SAACyF,EAAGC,GACpB,IAAIC,EAAQ,eAAQ5F,GACpB4F,EAASF,GAAKC,EACd3D,EAAS4D,IAEVP,GAAkB,SAAC3J,EAAM+E,GACxB,IAAIoF,EAAa7F,EAAM8B,QAAU,EAChCgE,EAAW,CACV9H,GAAI6H,EACJnK,KAAMA,EACN+E,QAAWA,GAAWoB,EAAOR,oBAAsBwE,GAEpDE,EAAY,YAAOvF,IAEpBP,GAAe,UAAW4F,GAEtBE,EAAapH,QAAUkD,EAAON,UACjCwE,EAAaC,QAGdD,EAAahI,KAAK+H,GAClB3B,GAAS4B,IAgBVhK,GAAwB,SAACkK,GACxB,IAAIC,EAAiB,GACjBC,EAAoB,eAAQjJ,GAC5BkJ,EAAwB,YAAOxD,GAUnC,GARA3F,EAAYS,KAAI,SAAUC,GAIzB,OAHIA,EAAGf,MAAQqJ,EAAarJ,MAC3Be,EAAG0I,YAAcF,EAAqBF,EAAarJ,MAE7CsJ,EAAenI,KAAKJ,MAE5B+E,EAAewD,GAEVC,EAAqBF,EAAarJ,KAEhC,CACN,IAAI0J,EAAiC,GACrCF,EAAyB1I,KAAI,SAAUC,GACtC,OAAIA,EAAGf,MAAQqJ,EAAarJ,IACpB0J,EAA+BvI,KAAKJ,GAErC2I,KAERzD,EAAyByD,QATzBzD,EAAyB,GAAD,mBAAKuD,GAAL,CAA+BH,KAaxDE,EAAqBF,EAAarJ,MAAQuJ,EAAqBF,EAAarJ,KAC5EkG,EAAqBqD,IAKtB5I,GAAmB,SAACgJ,GACnB,IAAIC,EAAI,IAAIlI,KAAKiI,GAEbE,EAAOD,EAAEE,cACTC,EAFS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEzGH,EAAEI,YAKrB,OAJWJ,EAAEK,UAGK,IAAMF,EAAQ,IAAMF,EAAO,KAFlCD,EAAEM,WAAa,GAAK,IAAMN,EAAEM,WAAaN,EAAEM,YAEI,KADhDN,EAAEO,aAAe,GAAK,IAAMP,EAAEO,aAAeP,EAAEO,eAI1DvB,GAAoB,SAACwB,GACpB,IAAIC,EAAK3I,KAAK4I,MACVV,EAAI,IAAIlI,KAAK2I,EAAY,GAAND,EAAW,GAAK,GAAK,KAK5C,OAJWR,EAAEE,cAGK,KAFLF,EAAEI,WAAa,EAAK,GAAK,KAAOJ,EAAEI,WAAa,GAAKJ,EAAEI,YAEnC,IADrBJ,EAAEK,WAcf,SAASlE,GAAgBwE,EAAKC,GAAe,IAAD,EACLpG,oBAAS,WAC9C,IACC,IAAMqG,EAAOxG,OAAOyG,aAAaC,QAAQJ,GACzC,OAAOE,EAAOG,KAAKjJ,MAAM8I,GAAQD,EAChC,MAAOK,GAER,OADAC,QAAQC,IAAIF,GACLL,MAPkC,mBACpCQ,EADoC,KACvBC,EADuB,KAsB3C,MAAO,CAACD,EAXS,SAAAE,GAChB,IACC,IAAMC,EACLD,aAAiBE,SAAWF,EAAMF,GAAeE,EAClDD,EAAeE,GACflH,OAAOyG,aAAaW,QAAQd,EAAKK,KAAKU,UAAUH,IAC/C,MAAON,GACRC,QAAQC,IAAIF,MAOf,OAlCAU,qBAAU,WACLlL,GAAeA,EAAY0B,QAAU,GACxCe,GAAqBtC,GAElB6F,IAAkBA,GAAetE,QAAU,GAC9CyF,QA8BD,sBAAKvI,UAAU,eAAf,UACC,cAAC,EAAD,CACCmE,MAAOA,EACPC,eAAgBA,GAChBnD,UAAWA,IACZ,cAAC,EAAD,CACCE,QAASgD,EAAMhD,QACfG,aAAc6C,EAAM7C,aACpBF,YAAagG,GACb7F,iBAAkBA,EAClBC,mBAAoBwE,EAAOxE,mBAC3BC,iBAAkBA,GAClBC,iBAAkBA,KACnB,cAAC,EAAD,CACCkC,WAAYA,GACZtC,aAAc6C,EAAM7C,aACpBC,iBAAkBA,EAClBsC,qBAAsBA,KACvB,cAAC,EAAD,CACC1C,QAASgD,EAAMhD,QACfG,aAAc6C,EAAM7C,aACpBF,YAAaA,EACbC,kBAAmBA,EACnBE,iBAAkBA,EAClBC,mBAAoBwE,EAAOxE,mBAC3BI,QAAS0E,EAAKD,QACd5E,iBAAkBA,GAClBC,iBAAkBA,GAClBxB,sBAAuBA,KACxB,cAAC,EAAD,CACCiB,SAAS,EACTC,YAAa2F,EACb1F,kBAAmBA,EACnBE,iBAAkBoF,EAClBnF,mBAAoBwE,EAAOxE,mBAC3BF,aAAc6C,EAAM7C,aACpBG,iBA/F2B,aAgG3BC,iBAAkBA,GAClBxB,sBAAuBA,KACxB,cAAC,EAAD,CACCyE,MAAOA,GACPE,kBA/IkB,SAAC0H,GAIpB,IAHA,IAAIrC,EAAY,YAAOvF,IACtB6H,EAAO,EAECC,EAAI,EAAGA,EAAIvC,EAAapH,OAAQ2J,IACxC,GAAIvC,EAAauC,IAAMvC,EAAauC,GAAGtK,KAAOoK,EAAY,CACzDC,EAAOC,EACP,MAGFvC,EAAawC,OAAOF,EAAM,GAC1BlE,GAAS4B,MAqIT,cAAC,EAAD,CACC/F,MAAOA,EACPC,eAAgBA,QAMLuI,MA5Vf,WACC,OACC,cAACzH,EAAD,KCVa0H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBV,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/C8D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCDdM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.b0e9eb6a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { RWebShare } from 'react-web-share'\r\n\r\nconst ActionButton = (props) => {\r\n    let fillValue = props.selected ? \"#10B981\" : \"none\"\r\n    let strokeValue = props.selected ? \"#10B981\" : \"currentColor\"\r\n    let useShare = props.type === \"share\" ? true : false\r\n    let useBookmark = props.type === \"bookmark\" ? true : false\r\n\r\n    let defaultButton = <button className=\"w-14 h-14\" onClick={() => useBookmark && props.handleArticleBookmark(props.articleData)}>\r\n        <span className=\"block bg-black text-gray-200 block rounded-full\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill={fillValue} viewBox={props.viewBox} stroke={strokeValue}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"0.5\" d={props.data} />\r\n            </svg>\r\n        </span>\r\n    </button>\r\n\r\n    return (\r\n        <div className=\"-mb-9 mr-2 z-10\">\r\n            {useShare && <RWebShare\r\n                data={{\r\n                    text: props.articleData.title,\r\n                    url: props.articleData.url,\r\n                    title: props.articleData.title,\r\n                }}>\r\n                {defaultButton}\r\n            </RWebShare>\r\n            }\r\n            {!useShare && defaultButton}\r\n        </div>\r\n    )\r\n}\r\n\r\nActionButton.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    articleList: PropTypes.shape(\r\n        {\r\n            title: PropTypes.string,\r\n            urlToImage: PropTypes.string,\r\n            source: PropTypes.shape(\r\n                {\r\n                    name: PropTypes.string\r\n                }\r\n            ),\r\n            publishedAt: PropTypes.string,\r\n            bookmarked: PropTypes.bool\r\n        }\r\n    ),\r\n    selected: PropTypes.bool,\r\n    viewBox: PropTypes.string.isRequired,\r\n    data: PropTypes.string.isRequired,\r\n    handleArticleBookmark: PropTypes.func\r\n}\r\n\r\nexport default ActionButton","const Loader = ({ isLoading }) => {\r\n    return (\r\n        <div>\r\n            {isLoading && <div className=\"flex h-screen w-screen fixed top-0 bg-black bg-opacity-70 z-50\">\r\n                <div className=\"m-auto\">\r\n                    <div className=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-32 w-32\">\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ActionButton from '../ActionButton'\r\nimport Loader from '../Loader'\r\n\r\nconst ArticleView = ({ useMock, articleList, selectedMenu, articleBookmarked, selectedCategory, maxCharDescription, handleGetArticle, handleTimeFormat, handleArticleBookmark, hasMore }) => {\r\n    let LayoutArticle = []\r\n\r\n    articleList.map(function (el, index) {\r\n        let hasDefaultImage = el.urlToImage ? true : false\r\n        let DefaultImage = \"https://images.unsplash.com/photo-1606639386377-aa1a3ed390ea?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80\"\r\n\r\n        LayoutArticle.push(\r\n            <div key={index} className=\"max-w-full bg-black rounded-2xl tracking-wide shadow mt-4 mb-2 pl-6 pr-6\">\r\n                <div id=\"header\" className=\"flex flex-col\">\r\n                    <div className=\"bg-gray-100 w-full h-48 rounded-md max-h-96 bg-cover flex items-end justify-end\" style={{ backgroundImage: `url(${hasDefaultImage ? el.urlToImage : DefaultImage})` }}>\r\n                        <ActionButton\r\n                            type=\"share\"\r\n                            articleData={el}\r\n                            viewBox=\"-7 -7 40 40\"\r\n                            data=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"\r\n                        />\r\n                        <ActionButton\r\n                            type=\"bookmark\"\r\n                            articleData={el}\r\n                            viewBox=\"-7 -7 40 40\"\r\n                            data=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"\r\n                            selected={articleBookmarked[el.url]}\r\n                            handleArticleBookmark={handleArticleBookmark}\r\n                        />\r\n                    </div>\r\n                    <div id=\"body\" className=\"flex flex-col w-full h-full p-3\">\r\n                        <h2 id=\"site\" className=\"font-light text-green-500 leading-5 text-sm\"><a href={el.url}>{el.source.name}</a></h2>\r\n                        <h1 id=\"title\" className=\"mb-1 text-2xl leading-7 text-gray-100\">{el.title}</h1>\r\n                        <h6 id=\"timestamp\" className=\"text-sm font-light text-gray-400 object-left-bottom\">{handleTimeFormat(Date.parse(el.publishedAt))}{el.author ? \" | \" + el.author : \"\"}</h6>\r\n                        <p className=\"text-white text-base font-light mt-1 mb-2\">{el.description && el.description.length > maxCharDescription ? el.description.substring(0, maxCharDescription) + \"...\" : el.description}</p>\r\n                        <a className=\"text-green-500 block w-full border rounded-md p-2 text-center border-green-500\" href={el.url}>Go To Website</a>\r\n                    </div>\r\n                </div>\r\n            </div >)\r\n\r\n        return LayoutArticle\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            < div className=\"min-h-screen flex flex-col\">\r\n                <h1 className=\"text-2xl font-light font-bold text-gray-200 pl-6 pr-6\">\r\n                    {selectedCategory.title ? selectedCategory.title : selectedCategory.name}\r\n                </h1>\r\n\r\n                {!useMock && articleList.length > 0 && < InfiniteScroll\r\n                    dataLength={articleList.length}\r\n                    next={handleGetArticle}\r\n                    hasMore={true}\r\n                    loader={Loader}\r\n                    refreshFunction={handleGetArticle}\r\n                    pullDownToRefresh\r\n                    pullDownToRefreshThreshold={50}\r\n                    pullDownToRefreshContent={\r\n                        <h3 style={{ textAlign: 'center' }}>&#8595; Pull down to refresh</h3>\r\n                    }\r\n                    releaseToRefreshContent={\r\n                        <h3 style={{ textAlign: 'center' }}>&#8593; Release to refresh</h3>\r\n                    }>\r\n                    {LayoutArticle}\r\n                </InfiniteScroll>}\r\n                {useMock && LayoutArticle}\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nArticleView.propTypes = {\r\n    useMock: PropTypes.bool,\r\n    articleList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            title: PropTypes.string,\r\n            urlToImage: PropTypes.string,\r\n            source: PropTypes.shape(\r\n                {\r\n                    name: PropTypes.string\r\n                }\r\n            ),\r\n            publishedAt: PropTypes.string\r\n        }\r\n    )).isRequired,\r\n    selectedMenu: PropTypes.string,\r\n    selectedCategory: PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string,\r\n            title: PropTypes.string\r\n        }\r\n    ),\r\n    hasMore: PropTypes.bool,\r\n    handleGetArticle: PropTypes.func.isRequired,\r\n    handleTimeFormat: PropTypes.func.isRequired,\r\n    handleArticleBookmark: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ArticleView","import PropTypes from 'prop-types'\r\n\r\nimport ArticleView from '../ArticleView'\r\n\r\nconst ArticleMainView = ({ useMock, selectedMenu, articleList, articleBookmarked, selectedCategory, maxCharDescription, handleGetArticle, handleTimeFormat, handleArticleBookmark, hasMore }) => {\r\n    return (\r\n        <div>\r\n            {selectedMenu === \"home\" && <div className=\"\">\r\n                <ArticleView\r\n                    useMock={useMock}\r\n                    articleList={articleList}\r\n                    articleBookmarked={articleBookmarked}\r\n                    selectedCategory={selectedCategory}\r\n                    maxCharDescription={maxCharDescription}\r\n                    handleGetArticle={handleGetArticle}\r\n                    handleTimeFormat={handleTimeFormat}\r\n                    handleArticleBookmark={handleArticleBookmark}\r\n                    hasMore={hasMore} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nArticleMainView.propTypes = {\r\n    useMock: PropTypes.bool,\r\n    articleList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            title: PropTypes.string,\r\n            urlToImage: PropTypes.string,\r\n            source: PropTypes.shape(\r\n                {\r\n                    name: PropTypes.string\r\n                }\r\n            ),\r\n            publishedAt: PropTypes.string\r\n        }\r\n    )).isRequired,\r\n    selectedMenu: PropTypes.string,\r\n    selectedCategory: PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string,\r\n            title: PropTypes.string\r\n        }\r\n    ),\r\n    hasMore: PropTypes.bool,\r\n    handleGetArticle: PropTypes.func.isRequired,\r\n    handleTimeFormat: PropTypes.func.isRequired,\r\n    handleArticleBookmark: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ArticleMainView","import PropTypes from 'prop-types'\r\n\r\nimport ArticleView from '../ArticleView'\r\n\r\nconst ArticleBookmarkedView = ({ useMock, selectedMenu, articleList, articleBookmarked, selectedCategory, maxCharDescription, handleGetArticle, handleTimeFormat, handleArticleBookmark, hasMore }) => {\r\n    return (\r\n        <div>\r\n            {selectedMenu === \"bookmark\" && <div className=\"mt-14 pt-4 bg-black\">\r\n                <ArticleView\r\n                    useMock={useMock}\r\n                    articleList={articleList}\r\n                    articleBookmarked={articleBookmarked}\r\n                    selectedCategory={selectedCategory}\r\n                    maxCharDescription={maxCharDescription}\r\n                    handleGetArticle={handleGetArticle}\r\n                    handleTimeFormat={handleTimeFormat}\r\n                    handleArticleBookmark={handleArticleBookmark}\r\n                    hasMore={hasMore} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nArticleBookmarkedView.propTypes = {\r\n    useMock: PropTypes.bool,\r\n    articleList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            title: PropTypes.string,\r\n            urlToImage: PropTypes.string,\r\n            source: PropTypes.shape(\r\n                {\r\n                    name: PropTypes.string\r\n                }\r\n            ),\r\n            publishedAt: PropTypes.string\r\n        }\r\n    )).isRequired,\r\n    selectedMenu: PropTypes.string,\r\n    selectedCategory: PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string,\r\n            title: PropTypes.string\r\n        }\r\n    ),\r\n    hasMore: PropTypes.bool,\r\n    handleGetArticle: PropTypes.func.isRequired,\r\n    handleTimeFormat: PropTypes.func.isRequired,\r\n    handleArticleBookmark: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ArticleBookmarkedView","import PropTypes from 'prop-types'\r\n\r\nconst CategoryMenu = ({ categories, selectedCategory, handleSelectCategory, selectedMenu }) => {\r\n    return (\r\n        <div>\r\n            {selectedMenu === \"home\" && <div className=\"overflow-hidden mb-4\" >\r\n                <ul className=\"flex flex-row overflow-x-scroll hide-scroll-bar\">\r\n                    {categories.map(function (category, index) {\r\n                        let isFirst = index === 0\r\n                        let isSelected = category.slug === selectedCategory.slug || (isFirst && selectedCategory.slug === \"init\")\r\n                        return (\r\n                            <li key={category.slug} className={`${isFirst ? \"ml-5\" : \"\"}`}>\r\n                                <a className={`border pl-4 pt-2 pb-2 pr-4 mr-1 rounded-3xl whitespace-nowrap border-gray-500 block ${isSelected ? \"bg-gray-200 text-black\" : \"text-gray-200\"}`} href={\"#\" + category.slug} onClick={() => handleSelectCategory(category)}>\r\n                                    {category.name}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    }, this)}\r\n                </ul>\r\n            </div >}\r\n        </div >\r\n    )\r\n}\r\n\r\nCategoryMenu.propTypes = {\r\n    categories: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string\r\n        }\r\n    )),\r\n    selectedCategory: PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string,\r\n            title: PropTypes.string\r\n        }\r\n    ),\r\n    selectedMenu: PropTypes.string,\r\n    handleSelectCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryMenu","import PropTypes from 'prop-types'\r\n\r\nimport Loader from '../Loader'\r\n\r\nconst Header = ({ cache, handleSetCache, isLoading }) => {\r\n    let fillValue = cache.selectedMenu === \"bookmark\" ? \"#10B981\" : \"none\"\r\n    let strokeValue = cache.selectedMenu === \"bookmark\" ? \"#10B981\" : \"currentColor\"\r\n    let toggleBookmark = cache.selectedMenu === \"bookmark\" ? \"home\" : \"bookmark\"\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"w-screen top-0 fixed bg-black h-16 z-30 border-b border-white\">\r\n                <div className=\"h-16 w-16 text-gray-200 float-left\" onClick={() => handleSetCache(\"isDisplayMenu\", !cache.isDisplayMenu)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"-12 -12 48 48\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={0.5} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"float-left text-white py-2 font-bold\" onClick={() => handleSetCache(\"selectedMenu\", \"home\")}>\r\n                    <h1 className=\"text-xl text-green-500\">LAMPU NEON</h1>\r\n                    <p className=\"text-xs font-light\">Berita Teknologi Apa Adanya</p>\r\n                </div>\r\n                <div className=\"h-16 w-16 text-gray-200 float-right\" onClick={() => handleSetCache(\"selectedMenu\", toggleBookmark)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill={fillValue} viewBox=\"-12 -12 48 48\" stroke={strokeValue}>\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={0.5} d=\"M16 4v12l-4-2-4 2V4M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg>\r\n                </div>\r\n            </div >\r\n            <Loader\r\n                isLoading={isLoading}\r\n            />\r\n        </div >\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    cache: PropTypes.shape({\r\n        selectedMenu: PropTypes.string,\r\n        isDisplayMenu: PropTypes.bool\r\n    }),\r\n    isLoading: PropTypes.bool,\r\n    handleSetCache: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Header","import PropTypes from 'prop-types'\r\n\r\nconst SideMenu = ({ cache, handleSetCache }) => {\r\n    return (\r\n        <div>\r\n            {cache.isDisplayMenu && <div className=\"h-screen fixed bg-black shadow-lg w-80 top-0 z-40\">\r\n                <ul>\r\n                    <li className={`border-b border-gray-200 p-4 text-gray-200`} onClick={() => handleSetCache(\"useMock\", !cache.useMock)}>Mock Data Source\r\n\t\t\t\t\t\t<div className=\"mb-3 mr-3 float-right\">\r\n                            <div className=\"relative inline-block w-10 align-middle select-none transition duration-200 ease-in\">\r\n                                <input checked={cache.useMock} type=\"checkbox\" name=\"toggle\" className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\" readOnly={true} />\r\n                                <label className=\"toggle-label block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer text-center\"></label>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className={`border-b border-gray-200 p-4 text-gray-200`} onClick={() => handleSetCache(\"isDisplayMenu\", !cache.isDisplayMenu)}>Close</li>\r\n                </ul>\r\n            </div>}\r\n            {cache.isDisplayMenu && <div className=\"fixed bg-black bg-opacity-70 h-screen w-screen top-0 z-30\" onClick={() => handleSetCache(\"isDisplayMenu\", !cache.isDisplayMenu)}></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nSideMenu.propTypes = {\r\n    cache: PropTypes.shape({\r\n        useMock: PropTypes.bool,\r\n        isDisplayMenu: PropTypes.bool,\r\n        selectedMenu: PropTypes.string\r\n    }),\r\n    handleSetCache: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SideMenu","import PropTypes from 'prop-types'\r\n\r\nconst Toast = (props) => {\r\n    return (\r\n        <div className=\"fixed left-0 p-2 w-full bottom-0 z-40\" >\r\n            {props.toast.map(function (data) {\r\n                return (\r\n                    <div key={data.id} className=\"flex items-center mt-1 bg-red-500 border-l-4 border-red-700 py-2 px-3 shadow-md z-40\">\r\n                        <div className=\"flex item-center text-white text-sm content-center w-full\">\r\n                            <div className=\"w-11/12\">{data.message}</div><div onClick={() => props.handleRemoveToast(data.id)} className=\"w-1/12 text-center float-right block\">OK</div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }, this)}\r\n        </div >\r\n    )\r\n}\r\n\r\nToast.propTypes = {\r\n    toast: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            id: PropTypes.number,\r\n            message: PropTypes.string,\r\n            type: PropTypes.string\r\n        }\r\n    ).isRequired),\r\n    handleRemoveToast: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Toast","import PropTypes from 'prop-types'\r\n\r\nconst TrendingView = ({ useMock, articleList, selectedMenu, selectedCategory, maxCharDescription, handleGetArticle, handleTimeFormat }) => {\r\n    let LayoutArticle = []\r\n\r\n    articleList.map(function (el, index) {\r\n        let hasDefaultImage = el.urlToImage && el.urlToImage.includes(\"default\")\r\n        let isFirst = index === 0 ? true : false\r\n\r\n        if (!isFirst) {\r\n            return LayoutArticle\r\n        }\r\n\r\n        LayoutArticle.push(\r\n            <div key={index} className=\"w-screen bg-black tracking-wide shadow mr-3 \">\r\n                <div id=\"header\" className=\"flex flex-col relative\" onClick={() => window.location.href = el.url}>\r\n                    <div className=\"bg-gray-100 w-screen h-96 block bg-cover bg-center\" style={{ backgroundImage: `url(${hasDefaultImage ? el.urlToImage : el.urlToImage})` }}></div>\r\n                    <div id=\"body\" className=\"absolute flex flex-wrap content-end p-3 block w-screen h-64 bottom-0\" style={{ backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,1))` }}>\r\n                        <div className=\"p-2\">\r\n                            <h2 id=\"site\" className=\"font-light text-green-500 mb-3 text-md\"><a className=\"border pl-3 pt-2 pb-2 pr-3 rounded-xs whitespace-nowrap border-green-500 bg-green-500 text-gray-100\" href={el.url}>{el.source.name}</a></h2>\r\n                            <h1 id=\"title\" className=\"font-semibold mb-1 text-3xl leading-7 text-gray-100\">{el.title}</h1>\r\n                            <h6 id=\"timestamp\" className=\"text-sm font-light text-gray-400 object-left-bottom\">{handleTimeFormat(Date.parse(el.publishedAt))}{el.author ? \" | \" + el.author : \"\"}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >)\r\n\r\n        return LayoutArticle\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {selectedMenu === \"home\" && <div className=\"mt-16 block min-w-screen flex flex-row overflow-x-scroll hide-scroll-bar mb-5\">\r\n                {LayoutArticle}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTrendingView.propTypes = {\r\n    useMock: PropTypes.bool,\r\n    articleList: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n            title: PropTypes.string,\r\n            urlToImage: PropTypes.string,\r\n            source: PropTypes.shape(\r\n                {\r\n                    name: PropTypes.string\r\n                }\r\n            ),\r\n            publishedAt: PropTypes.string,\r\n            bookmarked: PropTypes.bool\r\n        }\r\n    )).isRequired,\r\n    selectedMenu: PropTypes.string,\r\n    selectedCategory: PropTypes.shape(\r\n        {\r\n            name: PropTypes.string,\r\n            slug: PropTypes.string,\r\n            title: PropTypes.string\r\n        }\r\n    ),\r\n    handleGetArticle: PropTypes.func.isRequired,\r\n    handleTimeFormat: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TrendingView","\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport ArticleMainView from './components/ArticleMainView'\r\nimport ArticleBookmarkedView from './components/ArticleBookmarkedView'\r\nimport CategoryMenu from './components/CategoryMenu'\r\nimport Header from './components/Header'\r\nimport SideMenu from './components/SideMenu'\r\nimport Toast from './components/Toast'\r\nimport TrendingView from './components/TrendingView'\r\n\r\nimport './App.css'\r\nimport DataMockEnergy from './mock/sample.energy.json'\r\nimport DataMockSpace from './mock/sample.space.json'\r\nimport DataMockCybersecurity from './mock/sample.cybersecurity.json'\r\nimport DataMockAI from './mock/sample.ai.json'\r\nimport DataMockIoT from './mock/sample.iot.json'\r\nimport DataMockHealth from './mock/sample.health.json'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Home />\r\n\t)\r\n}\r\n\r\nfunction Home() {\r\n\tconst\r\n\t\t[config] = useState({\r\n\t\t\tnewsAPIAuthKey: process.env.REACT_APP_NEWS_API_KEY, /* please move it to a secure backend */\r\n\t\t\tnewsURLEverything: \"https://newsapi.org/v2/everything\",\r\n\t\t\tdefaultErrorMessage: \"Maaf, Silahkan coba kembali setelah beberapa saat.\",\r\n\t\t\ttimeout: 10000,\r\n\t\t\tmaxToast: 3,\r\n\t\t\tpageSize: 10,\r\n\t\t\tsortByDate: \"publishedAt\",\r\n\t\t\tsortByPopularity: \"popularity\",\r\n\t\t\tlanguage: \"en\",\r\n\t\t\tmaxCharDescription: 150,\r\n\t\t\tintervalDay: 14\r\n\t\t}),\r\n\t\t[cache, setCache] = useState({\r\n\t\t\tuseMock: true,\r\n\t\t\tidToast: 0,\r\n\t\t\tisInitArticleLoaded: false,\r\n\t\t\tselectedMenu: \"home\",\r\n\t\t\tisDisplayMenu: false\r\n\t\t}),\r\n\t\t[page, setPage] = useState({\r\n\t\t\tnumber: 1,\r\n\t\t\thasNext: false,\r\n\t\t}),\r\n\t\t[isLoading, setIsLoading] = useState(false),\r\n\t\t[selectedCategory, setSelectedCategory] = useState({\r\n\t\t\tname: \"All\", slug: \"all\", title: \"Latest\", keyword: \"space OR nasa OR spacex OR perseverance OR mars OR lapan OR solar panel OR wind turbine OR geothermal OR nuclear OR renewable OR energy OR arduino OR raspberry pi OR raspi OR IoT OR internet of things OR artificial intelligence OR neural network OR auto pilot OR hacker OR cyber security\"\r\n\t\t}),\r\n\t\t[articleBookmarkedCategory] = useState({\r\n\t\t\tname: \"All\", slug: \"all\", title: \"Bookmark\"\r\n\t\t}),\r\n\t\t[topCategory] = useState({\r\n\t\t\tname: \"Popular\", slug: \"popular\", title: \"Popular\", keyword: \"space OR nasa OR spacex OR perseverance OR mars OR lapan OR solar panel OR wind turbine OR geothermal OR nuclear OR renewable OR energy OR arduino OR raspberry pi OR raspi OR IoT OR internet of things OR artificial intelligence OR neural network OR auto pilot OR hacker\"\r\n\t\t}),\r\n\t\t[articleList, setArticleList] = useState([]),\r\n\t\t[articleBookmarkedList, setArticleBookmarkedList] = useLocalStorage(\"articleBookmarkedList\", []),\r\n\t\t[articleBookmarked, setArticleBookmarked] = useLocalStorage(\"articleBookmarked\", {}),\r\n\t\t[topArticleLoaded, setTopArticleLoaded] = useState(false),\r\n\t\t[topArticleList, setTopArticleList] = useState([]),\r\n\t\t[categories] = useState([\r\n\t\t\t{ name: \"All\", slug: \"all\", title: \"Latest\", keyword: \"space OR nasa OR spacex OR perseverance OR mars OR lapan OR solar panel OR wind turbine OR geothermal OR nuclear OR renewable OR energy OR arduino OR raspberry pi OR raspi OR IoT OR internet of things OR artificial intelligence OR neural network OR auto pilot OR hacker OR cyber security\" },\r\n\t\t\t{ name: \"Space\", slug: \"space\", keyword: \"nasa OR spacex OR perseverance OR mars OR lapan\" },\r\n\t\t\t{ name: \"Energy\", slug: \"energy\", keyword: \"solar panel OR wind turbine OR geothermal OR nuclear OR renewable OR energy\" },\r\n\t\t\t{ name: \"Health\", slug: \"health\", keyword: \"health AND -biden\" },\r\n\t\t\t{ name: \"IoT\", slug: \"iot\", keyword: \"arduino OR raspberry pi OR raspi OR IoT OR internet of things\" },\r\n\t\t\t{ name: \"Artificial Intelligence\", slug: \"ai\", keyword: \"artificial intelligence OR neural network OR auto pilot\" },\r\n\t\t\t{ name: \"Cybersecurity\", slug: \"cybersecurity\", keyword: \"hacker OR cyber security\" },\r\n\t\t]),\r\n\t\t[mockArticle] = useState({\r\n\t\t\tall: DataMockEnergy.articles,\r\n\t\t\tspace: DataMockSpace.articles,\r\n\t\t\tenergy: DataMockEnergy.articles,\r\n\t\t\thealth: DataMockHealth.articles,\r\n\t\t\tiot: DataMockIoT.articles,\r\n\t\t\tai: DataMockAI.articles,\r\n\t\t\tcybersecurity: DataMockCybersecurity.articles,\r\n\t\t\tpopular: DataMockSpace.articles,\r\n\t\t}),\r\n\t\t[toast, setToast] = useState([])\r\n\r\n\tconst\r\n\t\thandleSelectCategory = category => {\r\n\t\t\tif (selectedCategory.slug === category.slug && cache.isInitArticleLoaded) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tsetSelectedCategory(category)\r\n\r\n\t\t\tif (cache.useMock) {\r\n\t\t\t\tsetArticleList(mockArticle[category.slug])\r\n\t\t\t} else {\r\n\t\t\t\tsetIsLoading(true)\r\n\t\t\t\thandleGetArticle(category, 1)\r\n\t\t\t}\r\n\r\n\t\t\tif (!cache.useMock && !topArticleLoaded) {\r\n\t\t\t\thandleGetTopArticle()\r\n\t\t\t\tsetTopArticleLoaded(true)\r\n\t\t\t}\r\n\r\n\t\t\tif (!cache.isInitArticleLoaded) {\r\n\t\t\t\thandleSetCache(\"isInitArticleLoaded\", !cache.isInitArticleLoaded)\r\n\t\t\t}\r\n\t\t},\r\n\t\thandleGetArticle = (category, pageNumber) => {\r\n\t\t\tif (cache.useMock) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (!category) {\r\n\t\t\t\tcategory = selectedCategory\r\n\t\t\t}\r\n\t\t\tif (!pageNumber) {\r\n\t\t\t\tpageNumber = page.Number\r\n\t\t\t}\r\n\r\n\t\t\taxios.get(config.newsURLEverything, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"X-API-KEY\": config.newsAPIAuthKey\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tqInTitle: category.keyword,\r\n\t\t\t\t\tpage: pageNumber,\r\n\t\t\t\t\tpageSize: config.pageSize,\r\n\t\t\t\t\tsortBy: config.sortByDate,\r\n\t\t\t\t\tlanguage: config.language\r\n\t\t\t\t}\r\n\t\t\t}).then(res => {\r\n\t\t\t\tsetIsLoading(false)\r\n\r\n\t\t\t\tif (pageNumber > 1) {\r\n\t\t\t\t\tsetArticleList([...articleList, ...res.data.articles])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetArticleList(res.data.articles)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (res.data.totalResults > config.pageSize * pageNumber) {\r\n\t\t\t\t\thandleSetPage(true, pageNumber + 1)\r\n\t\t\t\t} else {\r\n\t\t\t\t\thandleSetPage(false, pageNumber)\r\n\t\t\t\t}\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tsetIsLoading(false)\r\n\r\n\t\t\t\tif (err.response && err.response.status !== 200) {\r\n\t\t\t\t\thandlePushToast(\"error\", err.response.message)\r\n\t\t\t\t} else if (err.name === 'Error') {\r\n\t\t\t\t\thandlePushToast(\"error\", \"There was an error, \" + err)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\thandleSetPage = (hasNext, pageNumber) => {\r\n\t\t\tlet newPage = { ...page }\r\n\t\t\tnewPage.hasNext = hasNext\r\n\t\t\tnewPage.Number = pageNumber\r\n\t\t\tsetPage(newPage)\r\n\t\t},\r\n\t\thandleGetTopArticle = () => {\r\n\t\t\tif (cache.useMock) {\r\n\t\t\t\tsetTopArticleList(mockArticle[\"popular\"])\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet paramFrom = handleGetPastDate(config.intervalDay)\r\n\r\n\t\t\taxios.get(config.newsURLEverything, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"X-API-KEY\": config.newsAPIAuthKey\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tqInTitle: topCategory.keyword,\r\n\t\t\t\t\tpage: 1,\r\n\t\t\t\t\tpageSize: 1,\r\n\t\t\t\t\tsortBy: config.sortByPopularity,\r\n\t\t\t\t\tlanguage: config.language,\r\n\t\t\t\t\tfrom: paramFrom\r\n\t\t\t\t}\r\n\t\t\t}).then(res => {\r\n\t\t\t\tsetTopArticleList(res.data.articles)\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tif (err.response && err.response.status !== 200) {\r\n\t\t\t\t\thandlePushToast(\"error\", err.response.message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\thandleSetCache = (e, v) => {\r\n\t\t\tlet newCache = { ...cache }\r\n\t\t\tnewCache[e] = v\r\n\t\t\tsetCache(newCache)\r\n\t\t},\r\n\t\thandlePushToast = (type, message) => {\r\n\t\t\tlet newToastID = cache.idToast + 1,\r\n\t\t\t\tnewToast = {\r\n\t\t\t\t\tid: newToastID,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmessage: (!message) ? config.defaultErrorMessage + newToastID : message,\r\n\t\t\t\t},\r\n\t\t\t\tcurrentToast = [...toast]\r\n\r\n\t\t\thandleSetCache(\"idToast\", newToastID)\r\n\r\n\t\t\tif (currentToast.length >= config.maxToast) {\r\n\t\t\t\tcurrentToast.shift()\r\n\t\t\t}\r\n\r\n\t\t\tcurrentToast.push(newToast)\r\n\t\t\tsetToast(currentToast)\r\n\r\n\t\t},\r\n\t\thandleRemoveToast = (idToRemove) => {\r\n\t\t\tlet currentToast = [...toast],\r\n\t\t\t\tmark = 0\r\n\r\n\t\t\tfor (let i = 0; i < currentToast.length; i++) {\r\n\t\t\t\tif (currentToast[i] && currentToast[i].id === idToRemove) {\r\n\t\t\t\t\tmark = i\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrentToast.splice(mark, 1)\r\n\t\t\tsetToast(currentToast)\r\n\t\t},\r\n\t\thandleArticleBookmark = (bookmarkData) => {\r\n\t\t\tlet newArticleList = []\r\n\t\t\tlet newArticleBookmarked = { ...articleBookmarked }\r\n\t\t\tlet newArticleBookmarkedList = [...articleBookmarkedList]\r\n\r\n\t\t\tarticleList.map(function (el) {\r\n\t\t\t\tif (el.url === bookmarkData.url) {\r\n\t\t\t\t\tel.bookmarked = !newArticleBookmarked[bookmarkData.url]\r\n\t\t\t\t}\r\n\t\t\t\treturn newArticleList.push(el)\r\n\t\t\t})\r\n\t\t\tsetArticleList(newArticleList)\r\n\r\n\t\t\tif (!newArticleBookmarked[bookmarkData.url]) {\r\n\t\t\t\tsetArticleBookmarkedList([...newArticleBookmarkedList, bookmarkData])\r\n\t\t\t} else {\r\n\t\t\t\tlet updateNewArticleBookmarkedList = []\r\n\t\t\t\tnewArticleBookmarkedList.map(function (el) {\r\n\t\t\t\t\tif (el.url !== bookmarkData.url) {\r\n\t\t\t\t\t\treturn updateNewArticleBookmarkedList.push(el)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn updateNewArticleBookmarkedList\r\n\t\t\t\t})\r\n\t\t\t\tsetArticleBookmarkedList(updateNewArticleBookmarkedList)\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewArticleBookmarked[bookmarkData.url] = !newArticleBookmarked[bookmarkData.url]\r\n\t\t\tsetArticleBookmarked(newArticleBookmarked)\r\n\t\t},\r\n\t\thandleGetArticleBookmarked = () => {\r\n\t\t\treturn\r\n\t\t},\r\n\t\thandleTimeFormat = (unix) => {\r\n\t\t\tlet t = new Date(unix)\r\n\t\t\tlet months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n\t\t\tlet year = t.getFullYear()\r\n\t\t\tlet month = months[t.getMonth()]\r\n\t\t\tlet date = t.getDate()\r\n\t\t\tlet hour = t.getHours() < 10 ? \"0\" + t.getHours() : t.getHours()\r\n\t\t\tlet min = t.getMinutes() < 10 ? \"0\" + t.getMinutes() : t.getMinutes()\r\n\t\t\tlet time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min\r\n\t\t\treturn time\r\n\t\t},\r\n\t\thandleGetPastDate = (day) => {\r\n\t\t\tlet ot = Date.now()\r\n\t\t\tlet t = new Date(ot - (day * 24 * 60 * 60 * 1000))\r\n\t\t\tlet year = t.getFullYear()\r\n\t\t\tlet month = (t.getMonth() + 1) < 10 ? \"0\" + (t.getMonth() + 1) : t.getMonth()\r\n\t\t\tlet date = t.getDate()\r\n\t\t\tlet time = year + '-' + month + '-' + date\r\n\t\t\treturn time\r\n\t\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (articleList && articleList.length <= 0) {\r\n\t\t\thandleSelectCategory(selectedCategory)\r\n\t\t}\r\n\t\tif (topArticleList && topArticleList.length <= 0) {\r\n\t\t\thandleGetTopArticle()\r\n\t\t}\r\n\t})\r\n\r\n\tfunction useLocalStorage(key, initialValue) {\r\n\t\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\t\ttry {\r\n\t\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\treturn initialValue;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst setValue = value => {\r\n\t\t\ttry {\r\n\t\t\t\tconst valueToStore =\r\n\t\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\r\n\t\t\t\tsetStoredValue(valueToStore);\r\n\t\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn [storedValue, setValue];\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App bg-black\">\r\n\t\t\t<Header\r\n\t\t\t\tcache={cache}\r\n\t\t\t\thandleSetCache={handleSetCache}\r\n\t\t\t\tisLoading={isLoading} />\r\n\t\t\t<TrendingView\r\n\t\t\t\tuseMock={cache.useMock}\r\n\t\t\t\tselectedMenu={cache.selectedMenu}\r\n\t\t\t\tarticleList={topArticleList}\r\n\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\tmaxCharDescription={config.maxCharDescription}\r\n\t\t\t\thandleGetArticle={handleGetArticle}\r\n\t\t\t\thandleTimeFormat={handleTimeFormat} />\r\n\t\t\t<CategoryMenu\r\n\t\t\t\tcategories={categories}\r\n\t\t\t\tselectedMenu={cache.selectedMenu}\r\n\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\thandleSelectCategory={handleSelectCategory} />\r\n\t\t\t<ArticleMainView\r\n\t\t\t\tuseMock={cache.useMock}\r\n\t\t\t\tselectedMenu={cache.selectedMenu}\r\n\t\t\t\tarticleList={articleList}\r\n\t\t\t\tarticleBookmarked={articleBookmarked}\r\n\t\t\t\tselectedCategory={selectedCategory}\r\n\t\t\t\tmaxCharDescription={config.maxCharDescription}\r\n\t\t\t\thasMore={page.hasNext}\r\n\t\t\t\thandleGetArticle={handleGetArticle}\r\n\t\t\t\thandleTimeFormat={handleTimeFormat}\r\n\t\t\t\thandleArticleBookmark={handleArticleBookmark} />\r\n\t\t\t<ArticleBookmarkedView\r\n\t\t\t\tuseMock={true}\r\n\t\t\t\tarticleList={articleBookmarkedList}\r\n\t\t\t\tarticleBookmarked={articleBookmarked}\r\n\t\t\t\tselectedCategory={articleBookmarkedCategory}\r\n\t\t\t\tmaxCharDescription={config.maxCharDescription}\r\n\t\t\t\tselectedMenu={cache.selectedMenu}\r\n\t\t\t\thandleGetArticle={handleGetArticleBookmarked}\r\n\t\t\t\thandleTimeFormat={handleTimeFormat}\r\n\t\t\t\thandleArticleBookmark={handleArticleBookmark} />\r\n\t\t\t<Toast\r\n\t\t\t\ttoast={toast}\r\n\t\t\t\thandleRemoveToast={handleRemoveToast} />\r\n\t\t\t<SideMenu\r\n\t\t\t\tcache={cache}\r\n\t\t\t\thandleSetCache={handleSetCache}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}